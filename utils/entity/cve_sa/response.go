package cveSa

import (
	"cve-sa-backend/models"
)

type SecurityNoticeData struct {
	models.RCveSecurityNotice
	Cvrf              *models.CveCvrf                     `json:"cvrf"`
	PackageHelperList []SAPackageHelper                   `json:"packageHelperList"`
	PackageList       []models.CveSecurityNoticePackage   `json:"packageList"`
	ReferenceList     []models.CveSecurityNoticeReference `json:"referenceList"`
	CveList           []DatabaseData                      `json:"cveList"`
}

type SAPackageHelper struct {
	ProductName string            `json:"productName"`
	PackageName string            `json:"packageName"`
	Sha256      string            `json:"sha256"`
	Child       []SAPackageHelper `json:"child"`
}

type DatabaseData struct {
	models.CveDatabase
	SecurityNoticeNo string                     `json:"securityNoticeNo"`
	ParserBean       *models.CveParser          `json:"parserBean"`
	Cvrf             *models.CveCvrf            `json:"cvrf"`
	PackageList      []models.CveProductPackage `json:"packageList"`
}

type HardwareCompatibility struct {
	*models.OeCompatibilityHardware
	CompatibilityConfiguration *models.OeCompatibilityHardware         `json:"compatibilityConfiguration"`
	BoardCards                 []models.OeCompatibilityHardwareAdapter `json:"boardCards"`
}

type ResultData struct {
	Total               int                                 `json:"totalCount"`
	SecurityNoticeList  []SecurityNoticeData                `json:"securityNoticeList"`
	CveDatabaseList     []DatabaseData                      `json:"cveDatabaseList"`
	ApplicationCompList []models.OeCompatibilityApplication `json:"applicationCompList"`
	HardwareCompList    []HardwareCompatibility             `json:"hardwareCompList"`
	DriverCompList      []models.OeCompatibilityDriver      `json:"driverCompList"`
}
